#!/usr/bin/env node

"use strict";

const process = require("node:process");
const path = require("node:path");
const DistributeWin32X64 = require("./deploy_app/Windows-x64-msi/gen_config_msi");
const DistributeDarwinArm64 = require("./deploy_app/macOS-arm64-dmg/package_dmg");


const BASE_PATH = path.join(__dirname);

function runCommand(command, afterDoing = () => 0) {
    console.log("正在执行：" + command);
    let exec = require('child_process').exec;
    exec(command, function (err, stdout, stderr) {
        if (err) {
            console.log('error:' + stderr);
        } else {
            console.log(stdout);
            afterDoing();
        }
    });
}

let distributeWin32X64 = new DistributeWin32X64();
let distributeDarwinArm64 = new DistributeDarwinArm64();

// 编译Rust部分代码
let rustProjectDir = path.join(BASE_PATH, "/libs/xc_mdz");
let saveDylibDir = path.join(BASE_PATH, "/libs/dylibs");
runCommand(`cd ${rustProjectDir} ` +
                        `&& napi build --release ` +
                        `&& cp ${path.join(rustProjectDir, "/xc_mdz.node")} ${saveDylibDir} ` +
                        `&& rm -rf ${path.join(rustProjectDir, "/target")} ` +
                        `&& rm -rf ${path.join(rustProjectDir, "/xc_mdz.node")} ` +
                        `&& cd ${BASE_PATH}`, () => {
    console.log("编译Rust库已完成，开始打包应用...");
    // 编译完成后开始打包应用
    if (process.platform === "win32") {
        console.log("检测到操作系统：Windows...");
        if (process.arch === "x64") {
            console.log("检测到系统架构：x64...");
            distributeWin32X64.run();
        }
    }

    if (process.platform === "darwin") {
        console.log("检测到操作系统：macOS...");
        if (process.arch === "arm64") {
            console.log("检测到系统架构：arm64...");
            distributeDarwinArm64.run();
        }
    }
});
